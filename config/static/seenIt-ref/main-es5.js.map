{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/+store/auth/actions.ts","webpack:///src/app/+store/auth/effects.ts","webpack:///src/app/+store/auth/reducers.ts","webpack:///src/app/+store/auth/selectors.ts","webpack:///src/app/+store/comments/actions.ts","webpack:///src/app/+store/comments/effects.ts","webpack:///src/app/+store/comments/reducers.ts","webpack:///src/app/+store/comments/selectors.ts","webpack:///src/app/+store/index.ts","webpack:///src/app/+store/posts/actions.ts","webpack:///src/app/+store/posts/effects.ts","webpack:///src/app/+store/posts/reducers.ts","webpack:///src/app/+store/posts/selectors.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/authentication/login/login.component.ts","webpack:///src/app/components/authentication/login/login.component.html","webpack:///src/app/components/authentication/register/register.component.ts","webpack:///src/app/components/authentication/register/register.component.html","webpack:///src/app/components/shared/content/content.component.ts","webpack:///src/app/components/shared/content/content.component.html","webpack:///src/app/components/shared/footer/footer.component.ts","webpack:///src/app/components/shared/footer/footer.component.html","webpack:///src/app/components/shared/header/header.component.ts","webpack:///src/app/components/shared/header/header.component.html","webpack:///src/app/components/shared/shared.module.ts","webpack:///src/app/core/guards/auth.guard.ts","webpack:///src/app/core/interceptors/error.interceptor.ts","webpack:///src/app/core/interceptors/notification.interceptor.ts","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/core/services/comment.service.ts","webpack:///src/app/core/services/post.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ActionTypes","Register","RegisterSuccess","RegisterFailed","Login","LoginSuccess","LoginFailed","Logout","LogoutSuccess","LogoutFailed","SetAuth","SetUser","register","registerSuccess","registerFailed","login","loginSuccess","loginFailed","logout","logoutSuccess","logoutFailed","setAuth","setUser","AuthEffects","actions$","authService","router","register$","pipe","username","password","signUp","navigate","err","error","login$","signIn","user","localStorage","setItem","userId","_id","auth","undefined","res","logout$","clear","providedIn","initialState","errorMessage","currentUser","reducer","state","action","getAuth","getUserId","getUsername","getErrorMessage","getUser","GetAll","GetAllSuccess","GetAllFailed","CreateComment","CreateCommentSuccess","CreateCommentFailed","DeleteComment","DeleteCommentSuccess","DeleteCommentFailed","getAllComments","getAllCommentsSuccess","getAllCommentsFailed","createComment","createCommentSuccess","createCommentFailed","deleteComment","deleteCommentSuccess","deleteCommentFailed","CommentsEffects","commentService","allUserComments$","getAllForPost","comments","createComment$","body","deleteComment$","all","getAll","reducers","posts","getAuthStore","getAuthUsername","getAuthUserId","getIsAuth","getAuthUser","getAuthErrorMessage","getPostStore","getPostAll","getByIdPost","getPostsUser","getPostErrorMessage","getCommentsStore","getCommentAll","getCommentErrorMessage","getRouterStore","getRouterUrl","routerState","url","GetAllCancel","GetPostById","GetPostByIdSuccess","GetPostByIdFailed","GetPostByIdCancel","GetUserPosts","GetUserPostsSuccess","GetUserPostsFailed","CreatePost","CreatePostSuccess","CreatePostFailed","EditPost","EditPostSuccess","EditPostFailed","DeletePost","DeletePostSuccess","DeletePostFailed","getAllPosts","getAllPostsSuccess","getAllPostsFailed","getAllPostsCancel","getPostById","getPostByIdSuccess","getPostByIdFailed","getPostByIdCansel","getUserPosts","getUserPostsSuccess","getUserPostsFailed","createPost","createPostSuccess","createPostFailed","editPost","editPostSuccess","editPostFailed","deletePost","deletePostSuccess","deletePostFailed","PostEffects","postService","allPosts$","allUserPosts$","userPosts","postById$","getById","post","createPost$","editPost$","postDelete$","getPosts","routes","path","pathMatch","redirectTo","component","data","isLogged","canActivateChild","loadChildren","m","PostModule","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","runtimeChecks","strictStateImmutability","strictActionImmutability","instrument","declarations","providers","bootstrap","LoginComponent","store","loginForm","value","dispatch","RegisterComponent","registerForm","ContentComponent","isLogged$","select","FooterComponent","date","Date","HeaderComponent","subscribe","userName","getItem","SharedModule","AuthGuard","childRoute","user$","user_name","isLoggedFromData","canContinue","navigateByUrl","ErrorInterceptor","toastr","next","handle","status","NotificationInterceptor","event","endsWith","success","method","AuthService","http","BASE_URL","withCredentials","get","CommentService","postId","PostService","BASE_USERS_URL","authorName","put","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { createAction, props } from '@ngrx/store';\r\n\r\nexport const ActionTypes = {\r\n  Register: '[AUTH] Register',\r\n  RegisterSuccess: '[AUTH] Register Success',\r\n  RegisterFailed: '[AUTH] Register Failed',\r\n\r\n  Login: '[AUTH] Login',\r\n  LoginSuccess: '[AUTH] Login Success',\r\n  LoginFailed: '[AUTH] Login Failed',\r\n\r\n  Logout: '[AUTH] Logout',\r\n  LogoutSuccess: '[AUTH] Logout Success',\r\n  LogoutFailed: '[AUTH] Logout Failed',\r\n\r\n  SetAuth: '[AUTH] Set Auth',\r\n  SetUser: '[AUTH] Set User'\r\n};\r\n\r\nexport const register = createAction(\r\n  ActionTypes.Register,\r\n  props<{ username: string, password: string }>()\r\n);\r\nexport const registerSuccess = createAction(\r\n  ActionTypes.RegisterSuccess,\r\n  props<{}>()\r\n);\r\nexport const registerFailed = createAction(\r\n  ActionTypes.RegisterFailed,\r\n  props<{ error: any }>()\r\n);\r\n\r\n\r\nexport const login = createAction(\r\n  ActionTypes.Login,\r\n  props<{ username: string, password: string }>()\r\n);\r\nexport const loginSuccess = createAction(\r\n  ActionTypes.LoginSuccess,\r\n  props<{ username: string, userId: string }>()\r\n);\r\nexport const loginFailed = createAction(\r\n  ActionTypes.LoginFailed,\r\n  props<{ error: any }>()\r\n);\r\n\r\n\r\nexport const logout = createAction(\r\n  ActionTypes.Logout,\r\n  props<{}>()\r\n);\r\nexport const logoutSuccess = createAction(\r\n  ActionTypes.LogoutSuccess,\r\n  props<{}>()\r\n);\r\nexport const logoutFailed = createAction(\r\n  ActionTypes.LogoutFailed,\r\n  props<{ error: any }>()\r\n);\r\n\r\n\r\nexport const setAuth = createAction(\r\n  ActionTypes.SetAuth,\r\n  props<{ auth: boolean }>()\r\n);\r\n\r\nexport const setUser = createAction(\r\n  ActionTypes.SetUser,\r\n  props<{ user: any }>()\r\n);\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { AuthService } from '../../core/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport * as AuthActions from './actions';\r\nimport { map, switchMap, mergeMap, tap, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthEffects {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  register$ = createEffect(() => this.actions$.pipe(\r\n    ofType(AuthActions.register),\r\n    switchMap(({ username, password }) => {\r\n      return this.authService.signUp({ username, password }).pipe(\r\n        map(() => {\r\n          return AuthActions.registerSuccess({});\r\n        }),\r\n        tap(() => this.router.navigate(['/login'])),\r\n        catchError((err) => [AuthActions.registerFailed({ error: err.error })])\r\n      );\r\n    })\r\n  ));\r\n\r\n  login$ = createEffect(() => this.actions$.pipe(\r\n    ofType(AuthActions.login),\r\n    switchMap(({ username, password }) => {\r\n      return this.authService.signIn({ username, password }).pipe(\r\n        tap((user) => localStorage.setItem('username', user.username)),\r\n        mergeMap((user) => {\r\n          return [\r\n            AuthActions.loginSuccess({ username: user.username, userId: user._id }),\r\n            AuthActions.setAuth({ auth: (user !== undefined || null) }),\r\n            AuthActions.setUser({ user })\r\n          ];\r\n        }),\r\n        tap((res) => {\r\n          // console.log(res);\r\n          // localStorage.setItem('username', username);\r\n          this.router.navigate(['/posts']);\r\n        }),\r\n        catchError((err) => [AuthActions.loginFailed({ error: err.error })])\r\n      );\r\n    })\r\n  ));\r\n\r\n  logout$ = createEffect(() => this.actions$.pipe(\r\n    ofType(AuthActions.logout),\r\n    switchMap(({}) => {\r\n      return this.authService.logout().pipe(\r\n        map(() => {\r\n          return AuthActions.logoutSuccess({});\r\n        }),\r\n        tap(() => {\r\n          localStorage.clear();\r\n          this.router.navigate(['/login']);\r\n        }),\r\n        catchError((err) => {\r\n          // console.log(err.error.error.message);\r\n          return [AuthActions.logoutFailed({ error: err.error })];\r\n        })\r\n      );\r\n    })\r\n  ));\r\n\r\n}\r\n\r\n\r\n\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport * as AuthActions from './actions';\r\n\r\nexport interface IState {\r\n  userId: string;\r\n  username: string;\r\n  auth: boolean;\r\n  errorMessage: string;\r\n  currentUser: Object | undefined;\r\n}\r\n\r\nconst initialState: IState = {\r\n  userId: '',\r\n  username: '',\r\n  auth: false,\r\n  errorMessage: '',\r\n  currentUser: undefined\r\n};\r\n\r\nexport const reducer = createReducer<IState>(\r\n  initialState,\r\n  on(AuthActions.setAuth, (state, { auth }) => {\r\n    return { ...state, auth };\r\n  }),\r\n  on(AuthActions.registerFailed, (state, { error }) => {\r\n    return { ...state, errorMessage: error };\r\n  }),\r\n  on(AuthActions.loginSuccess, (state, { username, userId }) => {\r\n    return { ...state, username, userId };\r\n  }),\r\n  on(AuthActions.loginFailed, (state, { error }) => {\r\n    return { ...state, errorMessage: error };\r\n  }),\r\n  on(AuthActions.setUser, (state, action ) => {\r\n    return { ... state, currentUser: action.user, userId: action.user._id };\r\n  }),\r\n  on(AuthActions.logoutSuccess, () => initialState)\r\n);\r\n","import { IState } from './reducers';\r\n\r\nexport const getAuth = (state: IState) => state.auth;\r\nexport const getUserId = (state: IState) => state.userId;\r\nexport const getUsername = (state: IState) => state.username;\r\nexport const getErrorMessage = (state: IState) => state.errorMessage;\r\nexport const getUser = (state: IState) => state.currentUser;\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { CommentInfo } from '../../components/shared/models/comment-info';\r\n\r\nexport const ActionTypes = {\r\n  GetAll: '[COMMENT] GetAll',\r\n  GetAllSuccess: '[COMMENT] GetAllSuccess',\r\n  GetAllFailed: '[COMMENT] GetAllFailed',\r\n\r\n  CreateComment: '[COMMENT] CreateComment',\r\n  CreateCommentSuccess: '[COMMENT] CreateCommentSuccess',\r\n  CreateCommentFailed: '[COMMENT] CreateCommentFailed',\r\n\r\n  DeleteComment: '[COMMENT] DeleteComment',\r\n  DeleteCommentSuccess: '[COMMENT] DeleteCommentSuccess',\r\n  DeleteCommentFailed: '[COMMENT] DeleteCommentFailed'\r\n};\r\n\r\n\r\nexport const getAllComments = createAction(\r\n  ActionTypes.GetAll,\r\n  props<{ id: string }>()\r\n);\r\nexport const getAllCommentsSuccess = createAction(\r\n  ActionTypes.GetAllSuccess,\r\n  props<{ comments: CommentInfo[] }>()\r\n);\r\nexport const getAllCommentsFailed = createAction(\r\n  ActionTypes.GetAllFailed,\r\n  props<{ error: any }>()\r\n);\r\n\r\n\r\nexport const createComment = createAction(\r\n  ActionTypes.CreateComment,\r\n  props<{ body: any }>()\r\n);\r\nexport const createCommentSuccess = createAction(\r\n  ActionTypes.CreateCommentSuccess,\r\n  props<{ }>()\r\n);\r\nexport const createCommentFailed = createAction(\r\n  ActionTypes.CreateCommentFailed,\r\n  props<{ error: any }>()\r\n);\r\n\r\n\r\nexport const deleteComment = createAction(\r\n  ActionTypes.DeleteComment,\r\n  props<{ id: string }>()\r\n);\r\nexport const deleteCommentSuccess = createAction(\r\n  ActionTypes.DeleteCommentSuccess,\r\n  props<{ }>()\r\n);\r\nexport const deleteCommentFailed = createAction(\r\n  ActionTypes.DeleteCommentFailed,\r\n  props<{ error: any }>()\r\n);\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { CommentService } from '../../core/services/comment.service';\r\nimport { CommentInfo } from '../../components/shared/models/comment-info';\r\nimport * as CommentsActions from './actions';\r\nimport { map, switchMap, mergeMap, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CommentsEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private commentService: CommentService\r\n  ) { }\r\n\r\n  allUserComments$ = createEffect(() => this.actions$.pipe(\r\n    ofType(CommentsActions.getAllComments),\r\n    switchMap(({ id }) => {\r\n      return this.commentService.getAllForPost(id).pipe(\r\n        map((comments: CommentInfo[]) => {\r\n          return CommentsActions.getAllCommentsSuccess({ comments });\r\n        }),\r\n        catchError((err) => [CommentsActions.getAllCommentsFailed({ error: err.error })])\r\n      );\r\n    })\r\n  ));\r\n\r\n  createComment$ = createEffect(() => this.actions$.pipe(\r\n    ofType(CommentsActions.createComment),\r\n    switchMap(({ body }) => {\r\n      return this.commentService.createComment(body).pipe(\r\n        map(() => CommentsActions.createCommentSuccess({ })),\r\n        catchError((err) => [CommentsActions.createCommentFailed({ error: err.error })])\r\n      );\r\n    })\r\n  ));\r\n\r\n  deleteComment$ = createEffect(() => this.actions$.pipe(\r\n    ofType(CommentsActions.deleteComment),\r\n    switchMap(({ id }) => {\r\n      return this.commentService.deleteComment(id).pipe(\r\n        map(() => CommentsActions.deleteCommentSuccess({ })),\r\n        catchError((err) => [CommentsActions.deleteCommentFailed({ error: err.error })])\r\n      );\r\n    })\r\n  ));\r\n}\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport * as CommentsActions from './actions';\r\nimport { CommentInfo } from '../../components/shared/models/comment-info';\r\n\r\nexport interface ICommentState {\r\n  all: CommentInfo[];\r\n  errorMessage: string;\r\n}\r\n\r\nconst initialState: ICommentState = {\r\n  all: [],\r\n  errorMessage: null\r\n};\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(CommentsActions.getAllCommentsSuccess, (state, { comments }) => {\r\n    return { ...state, all: comments };\r\n  }),\r\n  on(CommentsActions.getAllCommentsFailed, (state, { error }) => {\r\n    return { ...state, errorMessage: error };\r\n  }),\r\n  on(CommentsActions.createCommentFailed, (state, { error }) => {\r\n    return { ...state, errorMessage: error };\r\n  }),\r\n  on(CommentsActions.deleteCommentFailed, (state, { error }) => {\r\n    return { ...state, errorMessage: error };\r\n  })\r\n);\r\n","import { ICommentState } from './reducers';\r\n\r\nexport const getAll = (state: ICommentState) => state.all;\r\nexport const getErrorMessage = (state: ICommentState) => state.errorMessage;\r\n","import { ActionReducerMap } from '@ngrx/store';\r\nimport { IState as IAuthState, reducer as authReducer } from './auth/reducers';\r\nimport { IPostState, reducer as postsReducer } from './posts/reducers';\r\nimport { ICommentState, reducer as commentsReducer } from './comments/reducers';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { routerReducer, RouterReducerState } from '@ngrx/router-store';\r\nimport { RouterStateUrl } from '../core/app-router-serializer';\r\nimport * as authSel from './auth/selectors';\r\nimport * as posts from './posts/selectors';\r\nimport * as comments from './comments/selectors';\r\n\r\nexport interface IAppState {\r\n  auth: IAuthState;\r\n  posts: IPostState;\r\n  comments: ICommentState;\r\n  router: RouterReducerState<RouterStateUrl>;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<IAppState> = {\r\n  auth: authReducer,\r\n  posts: postsReducer,\r\n  comments: commentsReducer,\r\n  router: routerReducer\r\n};\r\n\r\n/* Auth Selectors */\r\nexport const getAuthStore = createFeatureSelector('auth');\r\nexport const getAuthUsername = createSelector(getAuthStore, authSel.getUsername);\r\nexport const getAuthUserId = createSelector(getAuthStore, authSel.getUserId);\r\nexport const getIsAuth = createSelector(getAuthStore, authSel.getAuth);\r\nexport const getAuthUser = createSelector(getAuthStore, authSel.getUser);\r\nexport const getAuthErrorMessage = createSelector(getAuthStore, authSel.getErrorMessage);\r\n// export const getIsAuthenticated = createSelector(getIsAuth, auth => !! auth);\r\n\r\n/* Post Selectors */\r\nexport const getPostStore = createFeatureSelector('posts');\r\nexport const getPostAll = createSelector(getPostStore, posts.getAll);\r\nexport const getByIdPost = createSelector(getPostStore, posts.getById);\r\nexport const getPostsUser = createSelector(getPostStore, posts.getPosts);\r\nexport const getPostErrorMessage = createSelector(getPostStore, posts.getErrorMessage);\r\n\r\n/* Comments Selectors */\r\nexport const getCommentsStore = createFeatureSelector('comments');\r\nexport const getCommentAll = createSelector(getCommentsStore, comments.getAll);\r\nexport const getCommentErrorMessage = createSelector(getCommentsStore, comments.getErrorMessage);\r\n\r\n/* Router Selectors */\r\nexport const getRouterStore = createFeatureSelector('router');\r\nexport const getRouterUrl = createSelector(getRouterStore,\r\n  (routerState: RouterReducerState<RouterStateUrl>) => routerState ? routerState.state.url : '');\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { PostInfo } from '../../components/shared/models/post-info';\r\n\r\nexport const ActionTypes = {\r\n  GetAll: '[POST] GetAll',\r\n  GetAllSuccess: '[POST] GetAllSuccess',\r\n  GetAllFailed: '[POST] GetAllFailed',\r\n  GetAllCancel: '[POST] GetAllCancel',\r\n\r\n  GetPostById: '[POST] GetPostById',\r\n  GetPostByIdSuccess: '[POST] GetPostByIdSuccess',\r\n  GetPostByIdFailed: '[POST] GetPostByIdFailed',\r\n  GetPostByIdCancel: '[POST] GetPostByIdCancel',\r\n\r\n  GetUserPosts: '[POST] GetUserPosts',\r\n  GetUserPostsSuccess: '[POST] GetUserPostsSuccess',\r\n  GetUserPostsFailed: '[POST] GetUserPostsFailed',\r\n\r\n  CreatePost: '[POST] CretePost',\r\n  CreatePostSuccess: '[POST] CreatePostSuccess',\r\n  CreatePostFailed: '[POST] CreatePostFailed',\r\n\r\n  EditPost: '[POST] EditPost',\r\n  EditPostSuccess: '[POST] EditPostSuccess',\r\n  EditPostFailed: '[POST] EditPostFailed',\r\n\r\n  DeletePost: '[POST] DeletePost',\r\n  DeletePostSuccess: '[POST] DeletePostSuccess',\r\n  DeletePostFailed: '[POST] DeletePostFailed'\r\n};\r\n\r\nexport const getAllPosts = createAction(\r\n  ActionTypes.GetAll,\r\n  props<{ }>()\r\n);\r\nexport const getAllPostsSuccess = createAction(\r\n  ActionTypes.GetAllSuccess,\r\n  props<{ posts: PostInfo | any }>()\r\n);\r\nexport const getAllPostsFailed = createAction(\r\n  ActionTypes.GetAllFailed,\r\n  props<{ error: any }>()\r\n);\r\nexport const getAllPostsCancel = createAction(\r\n  ActionTypes.GetAllCancel\r\n);\r\n\r\n\r\nexport const getPostById = createAction(\r\n  ActionTypes.GetPostById,\r\n  props<{ id: string }>()\r\n);\r\nexport const getPostByIdSuccess = createAction(\r\n  ActionTypes.GetPostByIdSuccess,\r\n  props<{ post: PostInfo }>()\r\n);\r\nexport const getPostByIdFailed = createAction(\r\n  ActionTypes.GetPostByIdFailed,\r\n  props<{ error: any }>()\r\n);\r\nexport const getPostByIdCansel = createAction(\r\n  ActionTypes.GetPostByIdCancel\r\n);\r\n\r\n\r\nexport const getUserPosts = createAction(\r\n  ActionTypes.GetUserPosts,\r\n  props<{ }>()\r\n);\r\nexport const getUserPostsSuccess = createAction(\r\n  ActionTypes.GetUserPostsSuccess,\r\n  props<{ posts: PostInfo | any }>()\r\n);\r\nexport const getUserPostsFailed = createAction(\r\n  ActionTypes.GetUserPostsFailed,\r\n  props<{ error: any }>()\r\n);\r\n\r\n\r\n\r\nexport const createPost = createAction(\r\n  ActionTypes.CreatePost,\r\n  // tslint:disable-next-line:ban-types\r\n  props<{ body: Object }>()\r\n);\r\nexport const createPostSuccess = createAction(\r\n  ActionTypes.CreatePostSuccess,\r\n  props<{ }>()\r\n);\r\nexport const createPostFailed = createAction(\r\n  ActionTypes.CreatePostFailed,\r\n  props<{ error: any }>()\r\n);\r\n\r\n\r\nexport const editPost = createAction(\r\n  ActionTypes.EditPost,\r\n  // tslint:disable-next-line:ban-types\r\n  props<{ id: string, body: Object }>()\r\n);\r\nexport const editPostSuccess = createAction(\r\n  ActionTypes.EditPostSuccess,\r\n  props<{ }>()\r\n);\r\nexport const editPostFailed = createAction(\r\n  ActionTypes.EditPostFailed,\r\n  props<{ error: any }>()\r\n);\r\n\r\n\r\nexport const deletePost = createAction(\r\n  ActionTypes.DeletePost,\r\n  props<{ id: string }>()\r\n);\r\nexport const deletePostSuccess = createAction(\r\n  ActionTypes.DeletePostSuccess,\r\n  props<{ }>()\r\n);\r\nexport const deletePostFailed = createAction(\r\n  ActionTypes.DeletePostFailed,\r\n  props<{ error: any }>()\r\n);\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { PostService } from '../../core/services/post.service';\r\nimport { Router } from '@angular/router';\r\nimport { PostInfo } from '../../components/shared/models/post-info';\r\nimport * as PostsActions from './actions';\r\nimport { map, switchMap, tap, catchError, takeUntil } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PostEffects {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private postService: PostService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  allPosts$ = createEffect(() => this.actions$.pipe(\r\n    ofType(PostsActions.getAllPosts),\r\n    switchMap(() => {\r\n      return this.postService.getAll().pipe(\r\n        takeUntil(this.actions$.pipe(ofType(PostsActions.getAllPostsCancel))),\r\n        map((posts: PostInfo[]) => PostsActions.getAllPostsSuccess({ posts })),\r\n        catchError((err) => [PostsActions.getAllPostsFailed({ error: err.error })])\r\n      );\r\n    })\r\n  ));\r\n\r\n  allUserPosts$ = createEffect(() => this.actions$.pipe(\r\n    ofType(PostsActions.getUserPosts),\r\n    switchMap(() => {\r\n      return this.postService.getUserPosts().pipe(\r\n        map((userPosts: PostInfo[]) => PostsActions.getUserPostsSuccess({ posts: userPosts })),\r\n        catchError((err) => [PostsActions.getUserPostsFailed({ error: err.error })])\r\n      );\r\n    })\r\n  ));\r\n\r\n  postById$ = createEffect(() => this.actions$.pipe(\r\n      ofType(PostsActions.getPostById),\r\n      switchMap(({ id }) => {\r\n        return this.postService.getById(id).pipe(\r\n          takeUntil(this.actions$.pipe(ofType(PostsActions.getPostByIdCansel))),\r\n          map((post: PostInfo) => PostsActions.getPostByIdSuccess({ post })),\r\n          catchError((err) => [PostsActions.getPostByIdFailed({ error: err.error })])\r\n        );\r\n      })\r\n  ));\r\n\r\n  createPost$ = createEffect(() => this.actions$.pipe(\r\n    ofType(PostsActions.createPost),\r\n    switchMap(({ body }) => {\r\n      return this.postService.createPost(body).pipe(\r\n        map(() => PostsActions.createPostSuccess({ })),\r\n        tap(() => this.router.navigate(['/posts'])),\r\n        catchError((err) => [PostsActions.createPostFailed({ error: err.error })])\r\n      );\r\n    })\r\n  ));\r\n\r\n  editPost$ = createEffect(() => this.actions$.pipe(\r\n    ofType(PostsActions.editPost),\r\n    switchMap(({ body, id }) => {\r\n      return this.postService.editPost(body, id).pipe(\r\n        map(() => PostsActions.editPostSuccess({ })),\r\n        tap(() => this.router.navigate(['/posts'])),\r\n        catchError((err) => [PostsActions.editPostFailed({ error: err.error })])\r\n      );\r\n    })\r\n  ));\r\n\r\n  postDelete$ = createEffect(() => this.actions$.pipe(\r\n    ofType(PostsActions.deletePost),\r\n    switchMap(({ id }) => {\r\n      return this.postService.deletePost(id).pipe(\r\n        map(() => {\r\n          return PostsActions.deletePostSuccess({ });\r\n        }),\r\n        tap(() => {\r\n          if (this.router.url !== '/posts') {\r\n            // return PostsActions.getAllPosts({});\r\n            this.router.navigate(['/posts']);\r\n          }\r\n        }),\r\n        catchError((err) => [PostsActions.deletePostFailed({ error: err.error })])\r\n      );\r\n    })\r\n  ));\r\n\r\n}\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport * as PostsActions from './actions';\r\nimport { PostInfo } from '../../components/shared/models/post-info';\r\n\r\nexport interface IPostState {\r\n  all: PostInfo[];\r\n  post: PostInfo;\r\n  userPosts: PostInfo[];\r\n  errorMessage: string;\r\n}\r\n\r\nconst initialState: IPostState = {\r\n  all: [],\r\n  post: null,\r\n  userPosts: [],\r\n  errorMessage: null\r\n};\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(PostsActions.getAllPostsSuccess, (state, { posts }) => {\r\n    return { ...state, all: posts };\r\n  }),\r\n  on(PostsActions.getAllPostsFailed, (state, { error }) => {\r\n    return { ...state, errorMessage: error };\r\n  }),\r\n  on(PostsActions.getPostByIdSuccess, (state, { post }) => {\r\n    return { ...state, post };\r\n  }),\r\n  on(PostsActions.getPostByIdFailed, (state, { error }) => {\r\n    return { ...state, errorMessage: error };\r\n  }),\r\n  on(PostsActions.getUserPostsSuccess, (state, { posts }) => {\r\n    return { ...state, userPosts: posts };\r\n  }),\r\n  on(PostsActions.getUserPostsFailed, (state, { error }) => {\r\n    return { ...state, errorMessage: error };\r\n  }),\r\n  on(PostsActions.createPostFailed, (state, { error }) => {\r\n    return { ...state, errorMessage: error };\r\n  }),\r\n  on(PostsActions.editPostFailed, (state, { error }) => {\r\n    return { ...state, errorMessage: error };\r\n  }),\r\n  on(PostsActions.deletePostFailed, (state, { error }) => {\r\n    return {...state, errorMessage: error };\r\n  })\r\n);\r\n","import { IPostState } from './reducers';\r\n\r\nexport const getAll = (state: IPostState) => state.all;\r\nexport const getById = (state: IPostState) => state.post;\r\nexport const getPosts = (state: IPostState) => state.userPosts;\r\nexport const getErrorMessage = (state: IPostState) => state.errorMessage;\r\n","// Modules\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { LoginComponent } from './components/authentication/login/login.component';\nimport { RegisterComponent } from './components/authentication/register/register.component';\n\nimport { AuthGuard } from './core/guards/auth.guard';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/login' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent, data: { isLogged: false } },\n  { path: 'posts', canActivateChild: [AuthGuard], loadChildren: () => import('./components/post/post.module').then(m => m.PostModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n// import { Store } from '@ngrx/store';\n// import { getRouterUrl, IAppState } from './+store';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","<div id=\"container\">\n  <app-header></app-header>\n  <app-content></app-content>\n  <app-footer></app-footer>\n</div>\n","// Modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { AppRouterSerializer } from './core/app-router-serializer';\nimport { SharedModule } from './components/shared/shared.module';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/authentication/login/login.component';\nimport { RegisterComponent } from './components/authentication/register/register.component';\n\n// Interceptors\nimport { NotificationInterceptor } from './core/interceptors/notification.interceptor';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\n\n// Reducers & Effects\nimport { reducers } from './+store';\nimport { AuthEffects } from './+store/auth/effects';\nimport { PostEffects } from './+store/posts/effects';\nimport { CommentsEffects} from './+store/comments/effects';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    // StoreRouterConnectingModule.forRoot({\n    //   serializer: AppRouterSerializer\n    // }),\n    SharedModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    StoreModule.forRoot(reducers, {\n      runtimeChecks: {\n        strictStateImmutability: false,\n        strictActionImmutability: false\n      },\n    }),\n    EffectsModule.forRoot([AuthEffects, PostEffects, CommentsEffects]),\n    StoreDevtoolsModule.instrument()\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NotificationInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { login } from '../../../+store/auth/actions';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  @ViewChild('f')loginForm: NgForm;\n\n  constructor(private store: Store<any>) { }\n\n  login() {\n    const { username, password } = this.loginForm.value;\n    this.store.dispatch(login({ username, password }));\n  }\n}\n","<section id=\"viewWelcome\">\n  <div class=\"welcome\">\n    <div class=\"signup\">\n      <form #f=\"ngForm\" (ngSubmit)=\"login()\" id=\"loginForm\">\n        <h2>Login</h2>\n        <label>Username:</label>\n        <input required name=\"username\" ngModel type=\"text\" />\n        <label>Password:</label>\n        <input required name=\"password\" ngModel type=\"password\" />\n        <input id=\"btnLogin\" [disabled]=\"f.invalid\" value=\"Sign In\" type=\"submit\">\n      </form>\n    </div>\n\n    <div class=\"about\">\n      <h1>Welcome to SeenIt</h1>\n      <p>\n        Share interesting links and discuss great content. It's what's happening now.\n      </p>\n      <p>Sign in or sign up in a second.</p>\n    </div>\n  </div>\n</section>\n\n","import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { register } from '../../../+store/auth/actions';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  @ViewChild('f') registerForm: NgForm;\n\n  constructor(private store: Store<any>) { }\n\n  register() {\n    const { username, password } = this.registerForm.value;\n    this.store.dispatch(register({ username, password }));\n  }\n}\n","<section id=\"viewWelcome\">\n  <div class=\"welcome\">\n    <div class=\"signup\">\n      <form #f=\"ngForm\" (ngSubmit)=\"register()\" id=\"registerForm\">\n        <h2>Register</h2>\n        <label>Username:</label>\n        <input required name=\"username\" ngModel type=\"text\" />\n        <label>Password:</label>\n        <input required name=\"password\" ngModel #pass=\"ngModel\" type=\"password\" />\n        <label>Repeat Password:</label>\n        <input required name=\"repeatPass\" ngModel #repeatPass=\"ngModel\" type=\"password\" />\n        <div *ngIf=\"pass.value !== repeatPass.value\">\n          Passwords must match!\n        </div>\n        <input id=\"btnRegister\" [disabled]=\"f.invalid\" value=\"Sign Up\" type=\"submit\">\n      </form>\n    </div>\n\n    <div class=\"about\">\n      <h1>Welcome to SeenIt</h1>\n      <p>\n        Share interesting links and discuss great content. It's what's happening now.\n      </p>\n      <p>Sign in or sign up in a second.</p>\n    </div>\n\n  </div>\n</section>\n\n","import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { IAppState } from '../../../+store';\nimport {\n  // getIsAuthenticated,\n  getIsAuth\n} from '../../../+store';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent {\n  isLogged$: Observable<boolean>;\n\n  constructor(private store: Store<IAppState>) {\n    this.isLogged$ = store.select(getIsAuth);\n  }\n}\n","<div class=\"content\">\n  <div id=\"menu\">\n    <div class=\"title\">Navigation</div>\n    <ng-template #notLogged>\n      <a class=\"nav\" [routerLink]=\"['/login']\">Login</a>\n      <a class=\"nav\" [routerLink]=\"['/register']\">Register</a>\n    </ng-template>\n    <ng-template #logged>\n      <a class=\"nav\" [routerLink]=\"['/posts']\">Catalog</a>\n      <a class=\"nav\" [routerLink]=\"['/posts/create']\">Create Post</a>\n      <a class=\"nav\" [routerLink]=\"['/posts/user']\">MyPosts</a>\n    </ng-template>\n    <ng-container *ngIf=\"(isLogged$ | async); then logged; else notLogged;\"></ng-container>\n  </div>\n  <router-outlet></router-outlet>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n  date: Date = new Date();\n}\n","<footer>SeenIt SPA © {{date | date: 'yyyy'}}</footer>\n","import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  IAppState,\n  getAuthUsername,\n  getIsAuth\n  // getIsAuthenticated\n} from '../../../+store';\nimport { logout } from '../../../+store/auth/actions';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n  // username$: Observable<string>;\n  username: string;\n  isLogged$: Observable<boolean>;\n\n  constructor(private store: Store<IAppState>) {\n    this.isLogged$ = this.store.select(getIsAuth);\n    this.store.select(getAuthUsername).subscribe((userName) => {\n      this.username = userName;\n      if (!userName) {\n        return this.username = localStorage.getItem('username');\n      }\n    });\n  }\n\n  logout() {\n    this.store.dispatch(logout({ }));\n  }\n}\n","<header>\n  <span class=\"logo\">☃</span><span class=\"header\">SeenIt</span>\n  <div *ngIf=\"(isLogged$ | async)\" id=\"profile\"><span>{{username}}</span>|<button (click)=\"logout()\">logout</button></div>\n</header>\n","// Modules\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n// Components\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ContentComponent } from './content/content.component';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FooterComponent,\n    ContentComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    HeaderComponent,\n    FooterComponent,\n    ContentComponent\n  ]\n})\nexport class SharedModule { }\n\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivateChild,\r\n  Router,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { IAppState, getAuthUser } from '../../+store';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, switchMap } from 'rxjs/operators';\r\nimport * as AuthActions from '../../+store/auth/actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivateChild {\r\n\r\n  user$: Observable<{}>;\r\n\r\n  constructor(\r\n    private store: Store<IAppState>,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    this.user$ = this.store.select(getAuthUser);\r\n    const user_name = localStorage.getItem('username');\r\n    if (!user_name){ return this.router.navigate(['/login']); }\r\n    return this.user$.pipe(\r\n      switchMap(user => user === undefined || null ? this.authService.getUser(user_name) : [user]),\r\n      map((user) => {\r\n        this.store.dispatch(AuthActions.setAuth({ auth: (user !== undefined || null) }));\r\n        this.store.dispatch(AuthActions.setUser({ user }));\r\n        const isLoggedFromData = childRoute.data.isLogged;\r\n        return typeof isLoggedFromData !== 'boolean' || isLoggedFromData === !!user;\r\n      }),\r\n      tap((canContinue) => {\r\n        if (canContinue) { return; }\r\n        const url = this.router.url;\r\n        this.router.navigateByUrl(url);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {\r\n  HttpResponse,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return next.handle(req).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n        if (err.status === 401) {\r\n          this.toastr.error(err.error, 'Error!');\r\n          this.router.navigate(['/login']);\r\n        }\r\n        return throwError(err);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {\r\n  HttpResponse,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Store } from '@ngrx/store';\r\nimport { IAppState } from '../../+store';\r\n\r\n@Injectable()\r\nexport class NotificationInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private toastr: ToastrService,\r\n    private store: Store<IAppState>\r\n  ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n      return next.handle(req).pipe(tap((event: HttpEvent<any>) => {\r\n        if (event instanceof HttpResponse && event.status === 200) {\r\n          if (req.url.endsWith('login')) {\r\n            this.toastr.success('Successfully login!', 'Success!');\r\n          }\r\n          else if (req.url.endsWith('register')) {\r\n            this.toastr.success('Successfully registered!', 'Success!');\r\n          }\r\n          else if (req.url.endsWith('logout')) {\r\n            this.toastr.success('Successfully logout!', 'Success!');\r\n          }\r\n          else if (req.method === 'DELETE') {\r\n            this.toastr.success('Successfully deleted!', 'Success!');\r\n          }\r\n        }\r\n        else if (event instanceof HttpResponse && event.status === 201) {\r\n          if (req.method === 'POST') {\r\n            this.toastr.success('Successfully created!', 'Success!');\r\n          } else if (req.method === 'PUT') {\r\n            this.toastr.success('Successfully modified!', 'Success!');\r\n          }\r\n        }\r\n      }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  private readonly BASE_URL = `http://localhost:3000/users`;\r\n  // private options = { withCredentials: true };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  signUp(body: { username: string, password: string }) {\r\n    return this.http.post(`${this.BASE_URL}/register`, body);\r\n  }\r\n\r\n  signIn(body: { username: string, password: string }) {\r\n    return this.http.post<{ username: string; _id: string }>(`${this.BASE_URL}/login`, body, { withCredentials: true });\r\n  }\r\n\r\n  logout() {\r\n    return this.http.post(`${this.BASE_URL}/logout`, {}, { withCredentials: true });\r\n  }\r\n\r\n  getUser(username: string) {\r\n    return this.http.get(`${this.BASE_URL}/${username}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CommentInfo } from '../../components/shared/models/comment-info';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CommentService {\r\n  private readonly BASE_URL = 'http://localhost:3000/comments';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllForPost(postId: string) {\r\n    return this.http.get<CommentInfo[]>(`${this.BASE_URL}?postId=${postId}`, { withCredentials: true });\r\n  }\r\n\r\n  createComment(body: any) {\r\n    return this.http.post(this.BASE_URL, body, { withCredentials: true });\r\n  }\r\n\r\n  deleteComment(id: string) {\r\n    return this.http.delete(`${this.BASE_URL}/${id}`, { withCredentials: true });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PostInfo } from '../../components/shared/models/post-info';\r\nimport { Store } from '@ngrx/store';\r\nimport { IAppState, getAuthUsername } from '../../+store';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PostService {\r\n  private readonly BASE_URL = `http://localhost:3000/posts`;\r\n  private readonly BASE_USERS_URL = `http://localhost:3000/users`;\r\n  authorName: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private store: Store<IAppState>\r\n  ) {\r\n    this.store.select(getAuthUsername).subscribe((username) => {\r\n      if (!username) {\r\n        this.authorName = localStorage.getItem('username');\r\n        return;\r\n      }\r\n      this.authorName = username;\r\n    });\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get<PostInfo[]>(this.BASE_URL, { withCredentials: true });\r\n  }\r\n\r\n  getById(id: string) {\r\n    return this.http.get<PostInfo>(this.BASE_URL + `/${id}`, { withCredentials: true });\r\n  }\r\n\r\n  getUserPosts() {\r\n    return this.http.get<PostInfo[]>(\r\n      `${this.BASE_USERS_URL}/${this.authorName}/posts`, { withCredentials: true }\r\n    );\r\n    // `${this.BASE_URL}/user?author=${this.authorName}`\r\n    // author=${localStorage.getItem('username')}\r\n    // query={\"author\":\"${localStorage.getItem('username')}\"}\r\n  }\r\n\r\n  getDetails(id: string) {\r\n    return this.http.get<PostInfo>(this.BASE_URL + `/${id}/details`, { withCredentials: true });\r\n    // `/details/${id}`\r\n  }\r\n\r\n  createPost(body: any) {\r\n    return this.http.post(this.BASE_URL, body, { withCredentials: true });\r\n    // `/create`\r\n  }\r\n\r\n  editPost(body: any, id: string) {\r\n    return this.http.put(this.BASE_URL + `/${id}`, body, { withCredentials: true });\r\n    // `/edit/${id}`\r\n  }\r\n\r\n  deletePost(id: string) {\r\n    return this.http.delete(this.BASE_URL + `/${id}`, { withCredentials: true });\r\n    // `/delete/${id}`\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}